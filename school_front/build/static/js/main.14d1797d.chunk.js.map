{"version":3,"sources":["components/Home.jsx","components/Header.jsx","components/Menu.jsx","api/bootapi.js","components/AddStudent.jsx","components/StudentTableRow.jsx","components/Pages.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useEffect","document","title","Jumbotron","className","style","backgroundColor","Header","Card","CardBody","Menu","ListGroup","horizontal","tag","to","proxy","AddStudent","useForm","register","handleSubmit","errors","formState","useState","student","setStudent","postDatatoServer","data","axios","post","then","response","console","log","toast","success","error","Form","onSubmit","sid","Date","now","Math","floor","random","scurrentDate","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","id","currentDate","FormGroup","Label","for","Input","type","placeholder","required","name","message","fatherName","minLength","value","maxlength","phoneNum","class","max","min","Container","Button","outline","invert","color","StudentTableRow","update","email","classNum","marks","onClick","delete","Pages","get","position","currentPage","setCurrentPage","offset","currentPageDate","slice","pageCount","ceil","updateStudents","filter","c","Table","previousLabel","nextLabel","onPageChange","selectedPage","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","map","item","App","Row","Col","md","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14d1797d.chunk.js","sourcesContent":["// Imports from the installed packages\r\nimport React, { useEffect } from \"react\";\r\nimport { Jumbotron } from \"reactstrap\";\r\n\r\n\r\n// Functional component\r\nconst Home = () => {\r\n\r\n\r\n  // Changing the title of document at the time of component rendering using UseEffect() hook\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  }, []);\r\n\r\n\r\n  // Rendering the component\r\n  return (\r\n    <div>\r\n      <Jumbotron\r\n        className=\"text-center py-5\"\r\n        style={{ backgroundColor: \"#e1f1dd\" }}\r\n      >\r\n        <h1>Student Application</h1>\r\n        <p>Presenting an easy way to add, delete and update student data</p>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// Exporting the component\r\nexport default Home;\r\n","// Imports from the installed packages\r\nimport React from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\n\r\n\r\n// Functional component\r\nfunction Header() {\r\n\r\n\r\n  // Rendering the component\r\n  return (\r\n    <div>\r\n      <Card className=\"my-2\" style={{backgroundColor:\"#c0fefc\"}}>\r\n        <CardBody>\r\n          <h1 className=\"text-center my-2\">Welcome to Student Application</h1>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// Exporting the component\r\nexport default Header;\r\n","// Imports from the installed packages\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup } from \"reactstrap\";\r\n\r\n\r\n// Functional component\r\nconst Menu = () => {\r\n\r\n\r\n  // Rendering the component\r\n  return (\r\n    <ListGroup horizontal>\r\n      <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/\">\r\n        Home\r\n      </Link>\r\n      <Link\r\n        className=\"list-group-item list-group-item-action\"\r\n        tag=\"a\"\r\n        to=\"/add-student\"\r\n      >\r\n        Add Student\r\n      </Link>\r\n      <Link\r\n        className=\"list-group-item list-group-item-action\"\r\n        tag=\"a\"\r\n        to=\"/view-students\"\r\n      >\r\n        View Students\r\n      </Link>\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\n\r\n// Exporting the component\r\nexport default Menu;\r\n","// For cross port connection\r\n\r\nconst proxy = \"http://localhost:8080\";\r\nexport default proxy;\r\n","// Imports from npm packages\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport proxy from \"../api/bootapi\";\r\nimport { Button, Container, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n// Functional Component of Adding the student\r\nconst AddStudent = () => {\r\n\r\n\r\n  // Changing the title of document at the time of rendering\r\n  useEffect(() => {\r\n    document.title = \"Add Student\";\r\n  }, []);\r\n\r\n\r\n  //react hook form, destructuring the features\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n\r\n  // To format the data according to the database\r\n  const formatDate = (date) => {\r\n    let d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n    // console.log(d);\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n  };\r\n\r\n\r\n  // State containing the state of data loading from back end\r\n  const [student, setStudent] = useState({});\r\n\r\n\r\n  // Function called at the time of submitting form\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    const sid = Date.now() + Math.floor(Math.random() * 1000);\r\n    const scurrentDate = formatDate(Date.now());\r\n    setStudent({ ...data, id: sid, currentDate: scurrentDate });\r\n    console.log(student);\r\n    postDatatoServer(student);\r\n  };\r\n\r\n\r\n  // Function requesting to post data to server\r\n  const postDatatoServer = (data) => {\r\n    axios.post(`${proxy}/students`, data).then(\r\n      (response) => {\r\n        console.log(response);\r\n        console.log(\"Success\");\r\n        toast.success(\"Student details added successfully\");\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        console.log(\"error\");\r\n        toast.error(\"Something went wrong\");\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  // Rendering the component, Using reactstap for components\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center my-3\">Fill Student Detail</h1>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FormGroup>\r\n          <Label for=\"studentName\">Student name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter here\"\r\n            id=\"sname\"\r\n            {...register(\"name\", { required: \"Please enter your first name\" })}\r\n          />\r\n          {errors.name && <p className=\"text-danger\">{errors.name.message}</p>}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"fatherName\">Father's name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter here\"\r\n            id=\"fatherName\"\r\n            {...register(\"fatherName\", {\r\n              required: \"Please enter your father's name\",\r\n            })}\r\n          />\r\n          {errors.fatherName && (\r\n            <p className=\"text-danger\">{errors.fatherName.message}</p>\r\n          )}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"dob\">Date of Birth</Label>\r\n          <Input\r\n            type=\"date\"\r\n            id=\"dateOfBirth\"\r\n            required\r\n            {...register(\"dateOfBirth\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"address\">Address</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Address here\"\r\n            id=\"address\"\r\n            required\r\n            {...register(\"address\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"city\">City</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter city here\"\r\n            id=\"city\"\r\n            required\r\n            {...register(\"city\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"state\">State</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter state here\"\r\n            id=\"state\"\r\n            required\r\n            {...register(\"state\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"pin\">Pin code</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Enter Pin here\"\r\n            id=\"pin\"\r\n            required\r\n            {...register(\"pin\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"telNo\">Phone Number</Label>\r\n          <Input\r\n            id=\"phoneNum\"\r\n            type=\"tel\"\r\n            {...register(\"phoneNum\", {\r\n              required: \"Please enter phone number\",\r\n              minLength: { value: 9, message: \"Minimum length is 10\" },\r\n              maxlength: { value: 14, message: \"Too Long\" },\r\n            })}\r\n          />\r\n          {errors.phoneNum && (\r\n            <p className=\"text-danger\">{errors.phoneNum.message}</p>\r\n          )}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email id</Label>\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Enter email here\"\r\n            id=\"email\"\r\n            required\r\n            {...register(\"email\")}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"classNum\">Class</Label>\r\n          <select\r\n            type=\"select\"\r\n            id=\"classNum\"\r\n            class=\"form-select\"\r\n            required\r\n            {...register(\"classNum\")}\r\n          >\r\n            <option value={5}>5</option>\r\n            <option value={6}>6</option>\r\n            <option value={7}>7</option>\r\n            <option value={8}>8</option>\r\n            <option value={9}>9</option>\r\n            <option value={10}>10</option>\r\n          </select>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"marks\">Marks (in %)</Label>\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"Enter marks here\"\r\n            id=\"marks\"\r\n            max={100}\r\n            min={0}\r\n            required\r\n            {...register(\"marks\")}\r\n          />\r\n        </FormGroup>\r\n        <Container className=\"text-center my-4\">\r\n          <Button type=\"reset\" outline invert color=\"warning mx-2\">\r\n            Clear\r\n          </Button>\r\n          <Button type=\"submit\" outline invert color=\"success mx-2\">\r\n            Add Student\r\n          </Button>\r\n        </Container>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// Exporting the Component\r\nexport default AddStudent;\r\n","// Imports from the installed packages\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport proxy from \"../api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"reactstrap\";\r\n\r\n\r\n// Functional component\r\nconst StudentTableRow = ({ student, update }) => {\r\n\r\n\r\n  // Handler to delete the student record using axios and updating the whole table by passing id of deleted record to parent container \r\n  const deleteStudent = (id) => {\r\n    axios.delete(`${proxy}/students/${id}`).then(\r\n      (response) => {\r\n        toast.success(\"Student record deleted\");\r\n        update(id);\r\n      },\r\n      (error) => {\r\n        toast.error(\"Couldn't delete record !! Internal server error\");\r\n      }\r\n    );\r\n  };\r\n\r\n// Rendering the component\r\n  return (\r\n    <>\r\n      <tr className=\"my-2\">\r\n        <th>{student.id}</th>\r\n        <td>{student.name}</td>\r\n        <td>{student.email}</td>\r\n        <td>{student.phoneNum}</td>\r\n        <td>{student.classNum}</td>\r\n        <td>{student.marks}</td>\r\n        <td>\r\n          <Button color=\"warning me-2\">Update</Button>\r\n          <Button\r\n            color=\"danger\"\r\n            onClick={() => {\r\n              deleteStudent(student.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// Exporting the component\r\nexport default StudentTableRow;\r\n","// Imports from the installed packages\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport proxy from \"../api/bootapi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Table } from \"reactstrap\";\r\nimport StudentTableRow from \"./StudentTableRow\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\n\r\n// Functional component\r\nconst Pages = () => {\r\n\r\n\r\n    // Changing the title of document at the time of component rendering using UseEffect() hook\r\n  useEffect(() => {\r\n    document.title = \"All Students\";\r\n  }, []);\r\n\r\n\r\n  //   Requesting the server to get the data stored in database using axios library\r\n  const getAllStudentsFromServer = () => {\r\n    axios.get(`${proxy}/students`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        toast.success(\"Student data has been loaded\", {\r\n          position: \"bottom-right\",\r\n        });\r\n        setStudent(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        toast.error(\"Something went wrong\", {\r\n          position: \"bottom-right\",\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  \r\n  //   As loading the data is asynchronous, so we are using useEffect hook to load the data from the server\r\n  //   once the component has been loaded.\r\n  useEffect(() => {\r\n    getAllStudentsFromServer();\r\n  }, []);\r\n\r\n\r\n  //   State defined for currentPage and data rendered from the backend\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [student, setStudent] = useState([]);\r\n\r\n\r\n  //   For the Pagination of the data\r\n  const PER_PAGE = 5;\r\n  const offset = currentPage * PER_PAGE;\r\n  const currentPageDate = student.slice(offset, offset + PER_PAGE);\r\n  const pageCount = Math.ceil(student.length / PER_PAGE);\r\n\r\n\r\n  //   Handler for when student record is navigated using pagination.\r\n  const handlePageClick = ({ selected: selectedPage }) => {\r\n    setCurrentPage(selectedPage);\r\n  };\r\n\r\n\r\n  //   Handler for deleting the student record.\r\n  const updateStudents = (id) => {\r\n    setStudent(student.filter((c) => c.id !== id));\r\n  };\r\n\r\n\r\n  //   Rendering the component\r\n  return (\r\n    <>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>S .no</th>\r\n            <th>Student Name</th>\r\n            <th>Email</th>\r\n            <th>Phone#</th>\r\n            <th>Class</th>\r\n            <th>Marks</th>\r\n            <th>Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            pageCount={pageCount}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"pagination__link\"}\r\n            nextLinkClassName={\"pagination__link\"}\r\n            disabledClassName={\"pagination__link--disabled\"}\r\n            activeClassName={\"pagination__link--active\"}\r\n          />\r\n          {currentPageDate.length > 0 ? (\r\n            currentPageDate.map((item) => (\r\n              <StudentTableRow\r\n                key={item.id}\r\n                student={item}\r\n                update={updateStudents}\r\n              />\r\n            ))\r\n          ) : (\r\n            <h2 className=\"text-center my-5\">No student record available</h2>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// Exporting the document\r\nexport default Pages;\r\n","// Imports from the installed packages\nimport { ToastContainer } from \"react-toastify\";\nimport Home from \"./components/Home\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport AddStudent from \"./components/AddStudent\";\nimport Pages from \"./components/Pages\";\n\n\n// Functional App component \nfunction App() {\n  return (\n    <div>\n      <Router>\n        <ToastContainer />\n        <Container>\n          <Header />\n          <Row>\n            <Col md={12}>\n              <Menu />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/add-student\" component={AddStudent} exact />\n              <Route path=\"/view-students\" component={Pages} exact />\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\n\n// Exporting the component\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}